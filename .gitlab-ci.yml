stages:
  - CI/CD
  - install
  - unit-tests
  - functional-tests
  - integration-tests

variables:
  GIT_STRATEGY: none

cache:
  untracked: true
  paths:
    - resolve-$CI_PIPELINE_ID
    - ci-cd
    - .yarn-cache
  policy: pull

###############
# CI/CD setup #
###############

prepare environment:
  stage: CI/CD
  tags:
    - ubuntu
  only:
    - ci/cd
  except:
    - triggers
  cache:
    policy: pull-push
  script:
    - rm -rf ci-cd || true
    - git clone https://github.com/reimagined/resolve.git ci-cd
    - cd ci-cd
    - git fetch origin ci/cd:ci/cd
    - git checkout ci/cd
    - yarn install --frozen-lockfile --cache-folder .yarn-cache
    - pm2 delete trigger-on-pull-request || true
    - pm2 start trigger-on-pull-request/index.js --name trigger-on-pull-request

#######################
# pull request -> dev #
#######################

install:
  stage: install
  tags:
    - macos
  only:
    variables:
      - $CI_PIPELINE_TRIGGERED == 'true'
  only:
    variables:
      - $SOURCE_BRANCH_NAME =~ /^feature\/.+/
  only:
    variables:
      - $TARGET_BRANCH_NAME == 'dev'
  cache:
    policy: pull-push
  script:
    - rm -rf resolve-$CI_PIPELINE_ID || true
    - git clone https://github.com/reimagined/resolve.git resolve-$CI_PIPELINE_ID
    - cd resolve-$CI_PIPELINE_ID
    - git fetch origin $MERGE_COMMIT_SHA:merge-commit
    - git checkout merge-commit
    - yarn install --frozen-lockfile --cache-folder .yarn-cache

checks:
  stage: unit-tests
  tags:
    - macos
  only:
    variables:
      - $CI_PIPELINE_TRIGGERED == 'true'
  only:
    variables:
      - $SOURCE_BRANCH_NAME =~ /^feature\/.+/
  only:
    variables:
      - $TARGET_BRANCH_NAME == 'dev'
  cache:
    policy: pull
  script:
    - cd resolve-$CI_PIPELINE_ID/
    - if [ "$(node_modules/.bin/prettier --no-semi --single-quote --list-different "**/*.js")" ]; then exit 1; fi
    - yarn test
    - yarn lint

functional-tests:
  stage: unit-tests
  tags:
    - macos
  only:
    variables:
      - $CI_PIPELINE_TRIGGERED == 'true'
  only:
    variables:
      - $SOURCE_BRANCH_NAME =~ /^feature\/.+/
  only:
    variables:
      - $TARGET_BRANCH_NAME == 'dev'
  cache:
    policy: pull
  script:
    - cd resolve-$CI_PIPELINE_ID/
    - if [ "$(node_modules/.bin/prettier --no-semi --single-quote --list-different "**/*.js")" ]; then exit 1; fi
    - yarn test:functional safari

#################
# dev -> master #
#################

macOS (install):
  stage: install
  tags:
    - macos
  only:
    variables:
      - $CI_PIPELINE_TRIGGERED == 'true'
  only:
    variables:
      - $SOURCE_BRANCH_NAME == 'dev'
  only:
    variables:
      - $TARGET_BRANCH_NAME == 'master'
  cache:
    policy: pull-push
  script:
    - rm -rf resolve-$CI_PIPELINE_ID || true
    - git clone https://github.com/reimagined/resolve.git resolve-$CI_PIPELINE_ID
    - cd resolve-$CI_PIPELINE_ID
    - git fetch origin $MERGE_COMMIT_SHA:merge-commit
    - git checkout merge-commit
    - yarn install --frozen-lockfile --cache-folder .yarn-cache

ubuntu (install):
  stage: install
  tags:
    - ubuntu
  only:
    variables:
      - $CI_PIPELINE_TRIGGERED == 'true'
  only:
    variables:
      - $SOURCE_BRANCH_NAME == 'dev'
  only:
    variables:
      - $TARGET_BRANCH_NAME == 'master'
  cache:
    policy: pull-push
  script:
    - rm -rf resolve-$CI_PIPELINE_ID || true
    - git clone https://github.com/reimagined/resolve.git resolve-$CI_PIPELINE_ID
    - cd resolve-$CI_PIPELINE_ID
    - git fetch origin $MERGE_COMMIT_SHA:merge-commit
    - git checkout merge-commit
    - yarn install --frozen-lockfile --cache-folder .yarn-cache

eslint + prettier:
  stage: unit-tests
  tags:
    - any
  only:
    variables:
      - $CI_PIPELINE_TRIGGERED == 'true'
  only:
    variables:
      - $SOURCE_BRANCH_NAME == 'dev'
  only:
    variables:
      - $TARGET_BRANCH_NAME == 'master'
  script:
    - cd resolve-$CI_PIPELINE_ID/
    - if [ "$(node_modules/.bin/prettier --no-semi --single-quote --list-different "**/*.js")" ]; then exit 1; fi
    - yarn lint

unit-tests:
  stage: unit-tests
  tags:
    - any
  only:
    variables:
      - $CI_PIPELINE_TRIGGERED == 'true'
  only:
    variables:
      - $SOURCE_BRANCH_NAME == 'dev'
  only:
    variables:
      - $TARGET_BRANCH_NAME == 'master'
  script:
    - cd resolve-$CI_PIPELINE_ID/
    - yarn test

macOS (functional-tests):
  stage: functional-tests
  tags:
    - macos
  only:
    variables:
      - $CI_PIPELINE_TRIGGERED == 'true'
  only:
    variables:
      - $SOURCE_BRANCH_NAME == 'dev'
  only:
    variables:
      - $TARGET_BRANCH_NAME == 'master'
  script:
    - cd resolve-$CI_PIPELINE_ID/
    - yarn test:functional safari
    
ubuntu (functional-tests):
  stage: functional-tests
  tags:
    - ubuntu
  only:
    variables:
      - $CI_PIPELINE_TRIGGERED == 'true'
  only:
    variables:
      - $SOURCE_BRANCH_NAME == 'dev'
  only:
    variables:
      - $TARGET_BRANCH_NAME == 'master'
  script:
    - cd resolve-$CI_PIPELINE_ID/
    - DISPLAY=:0 yarn test:functional chromium

ubuntu (integration-tests):
  stage: integration-tests
  tags:
    - ubuntu
  only:
    variables:
      - $CI_PIPELINE_TRIGGERED == 'true'
  only:
    variables:
      - $SOURCE_BRANCH_NAME == 'dev'
  only:
    variables:
      - $TARGET_BRANCH_NAME == 'master'
  script:
    - echo "(memory, rabbitmq, zeromq)"

macOS (create-resolve-app):
  stage: integration-tests
  tags:
    - macos
  only:
    variables:
      - $CI_PIPELINE_TRIGGERED == 'true'
  only:
    variables:
      - $SOURCE_BRANCH_NAME == 'dev'
  only:
    variables:
      - $TARGET_BRANCH_NAME == 'master'
  script:
    - echo npx

ubuntu (create-resolve-app):
  stage: integration-tests
  tags:
    - ubuntu
  only:
    variables:
      - $CI_PIPELINE_TRIGGERED == 'true'
  only:
    variables:
      - $SOURCE_BRANCH_NAME == 'dev'
  only:
    variables:
      - $TARGET_BRANCH_NAME == 'master'
  script:
    - echo npx
